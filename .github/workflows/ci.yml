name: CI

on: [push]


jobs:

  test:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        build-type: [Release, Debug]
        include:
          - os: ubuntu-latest
            build-type: Release
            openmp: true
          - os: macos-latest
            build-type: Release
            openmp: true

    env:
      CMAKE_FLAGS: -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} -DSPIRIT_UI_CXX_USE_QT=OFF
      OMP_NUM_THREADS: 4

    steps:
    - uses: actions/checkout@v2

    - name: Create build folder
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure environment
      if: ${{ matrix.openmp }}
      run: export CMAKE_FLAGS=$CMAKE_FLAGS -DSPIRIT_USE_OPENMP=ON

    - name: configure
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE $CMAKE_FLAGS

    - name: build
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake --build . --config ${{ matrix.build-type }} -j 2

    - name: Install python packages
      run: pip install --user numpy

    - name: test
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: ctest -C ${{ matrix.build-type }} --output-on-failure

  build-cuda:

    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - os: ubuntu-20.04
          - os: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2

    - name: Install CUDA
      run: sudo apt install nvidia-cuda-toolkit

    - name: Create build folder
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: configure
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DSPIRIT_UI_CXX_USE_QT=OFF -DSPIRIT_USE_CUDA=ON -DSPIRIT_CUDA_ARCH=sm_70

    - name: build
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake --build . --config $BUILD_TYPE -j 2